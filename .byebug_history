c
@relation = Relationship.all.where("followed_id = ? AND (created_at >= ? AND created_at <= ?)",self.id,date.beginning_of_day,date.end_of_day)
@relation.count
@relation = Relationship.all.where("followed_id = ? AND (created_at >= ? AND created_at <= ?)",self.id,date.beginning_of_day,date.end_of_day)
@relation.count
@relation = Relationship.all.where("followed_id = ? AND created_at = ?",self.id,date.to_date)
@relation = Relationship.all.where("followed_id = ? AND created_at.to_date = ?",self.id,date.to_date)
@relation = Relationships.all.where("followed_id = ? AND created_at.to_date = ?",self.id,date.to_date)
Relationships.all.where("followed_id = ? AND created_at.to_date = ?",self.id,date.to_date).count
self.id
self
seld
date
c
omniauth['email']c
omniauth['email']
User.find_by(email: omniauth['email'])
c
user.save
c
user.errors
user.save!
user
user.save!
user.save
user
c
user.save!
user.errors
user.save
user
c
user.save
user
c
user
user.save
c
user
!self.is_twitter
c
user.save
user
user.save!
user.save
Authentication.count
Authentication
User.where(email: "srikanthreddy.palwai@chronus.com")
User.find(email: "srikanthreddy.palwai@chronus.com")
User.find_by(email: "srikanthreddy.palwai@chronus.com")
user.save
user
c
user.destroy
user.save
reload!
user
user.save
c
user.save
user
user.destroy
user.save
c
user.save!
user.errors
user.valid?
user.errors
user.save!
user.errors
user.save
user
c
user.is_twitter
user.save
user
c
self.is_twitter
self
user
c
c\
is_twitter
c
is_twitter
c
omniauth['info']['email']
c
C
c
n
omniauth['info'].permit(:email)
omniauth['info'].permit(:name)
omniauth.require("info")
omniauth.require(:info)
ominauth.require(:info)
c
omniauth['info']
c
omniauth['info']
c
omniauth['info']
omniauth
c
n
c
omniauth["info"]["email"]
omniauth["info"]
omniauth["user_info"]
omniauth["email"]
omniauth
omniauth['email']
omniauth['user_info']
omniauth = request.env["omniauth.auth"]
c
request.env["omniauth.auth"]
request
omniauth['user_info']
omniauth = request.env["omniauth.auth"]
request.env["omniauth.auth"]
params
c
request.env["omniauth.auth"]["user_info"]
request.env["omniauth.auth"]
c
omniauth['user_info']
omniauth['user_info']['email']
omniauth
omniUTH
self
c
n
self
c
n
c
n
c
@var
n
c
n
c
Authentication.first.uid
Authentication.first
@var
n
c
Authentication.first
c
auth['uid']
auth
params
Authentication.first
Authentication
Authentications
n
@user
c
current_user
c
User.authentications.create
params
@user
c
auth
params
c
@user.authentications.destroy
@user.authentications.create()
@user=User.first
User.authentication.create()
User.authentications.create()
User.authentications
Authentication
authentication
authentications
authentication
c
authentication
authentications
authentication
User
User.authentication
User.authentications
User.authenticatioons
q
@relation
c
@relatio
@relation
c
@relation
c
@relation
c
Relationship.last.created_at.to_date
date
q
c
follower
c
follower
follower.created_at.to_date
c
follower.created_at.to_date
c
follower.created_at.to_date
follower.created_at
quit
c
Relationship.find(3)
c
@relation
c
Relationship.find(2)
@relation
@relation.update_attributes(created_at: date)
@relation
date
c
@relation.update_attributes(created_at: date)
date
@relation
quit
c
user.followers.find(5)
follower.update_follow!(user,(Time.now - index.days))
user.followers.find(5)
follower.update_follow!(user,Time.now - index.days)
follower
index
c
index
user.followers.find(4)
user.followers
follower.update_follow!(user,Time.now - index.days)
follower
c
user.followers.pluck(:created_at).uniq
user.followers.pluck(:created_at)
user.followers
user
followers.first
followers
q
c
self.id
self.followers.pluck(:created_at).sort
self.followers.pluck(:created_at)
self.followers
@count
n
date
q
date
